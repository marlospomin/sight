!function(e,t){if("function"==typeof define&&define.amd)define(["module","exports"],t);else if("undefined"!=typeof exports)t(module,exports);else{var r={exports:{}};t(r,r.exports),e.sight=r.exports}}(this,function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(){function e(e){c=new IntersectionObserver(t,n),Array.from(e).forEach(function(e){c.observe(e)})}function t(e){Array.from(e).forEach(function(e){e.isIntersecting&&(console.log("debugging"),c.unobserve(e.target))})}var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},i=r({},o,n),s=i.selector,f=(i.threshold,document.querySelectorAll(s)),c=void 0;if("IntersectionObserver"in window)return e(f)};var r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e},o={selector:"[data-sight]",threshold:[.5]};e.exports=t.default});